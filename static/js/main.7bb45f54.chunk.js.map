{"version":3,"sources":["Quotes.js","index.js"],"names":["Counter","_useState","useState","_useState2","Object","slicedToArray","qtext","setqtext","_useState3","_useState4","qauthor","setqauthor","_useState5","Math","floor","random","_useState6","count","setCoun","show","axios","get","then","res","data","text","author","useEffect","react_default","a","createElement","Fragment","Paper","elevation","className","FormatQuote_default","Tooltip","title","IconButton","onClick","style","margin","ArrowBackIos_default","color","Fab","Replay_default","ArrowForwardIos_default","Button","background","twtpost","concat","window","open","Twitter_default","height","width","ReactDOM","render","Quotes","document","getElementById"],"mappings":"yWA6GeA,EA/FC,WAAM,IAAAC,EACMC,qBADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbK,EADaH,EAAA,GACNI,EADMJ,EAAA,GAAAK,EAEUN,qBAFVO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEbE,EAFaD,EAAA,GAEJE,EAFIF,EAAA,GAAAG,EAGKV,mBAASW,KAAKC,MAAsB,IAAhBD,KAAKE,WAH9BC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGbK,EAHaD,EAAA,GAGNE,EAHMF,EAAA,GAuBdG,EAAO,WACXC,IAAMC,IAAN,+BAAyCC,KAAK,SAACC,GAC7ChB,EAASgB,EAAIC,KAAKP,GAAOQ,MAEzBd,EAAWY,EAAIC,KAAKP,GAAOS,WAY/B,OAJAC,oBAAU,WACRR,KACC,CAACF,IAGFW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAU,aAC7BN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,OAEDvB,EACDsB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,QAIJD,EAAAC,EAAAC,cAAA,aAAKpB,GAELkB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,MAAM,QACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QA7CZ,WACNtB,GAAS,GACXC,EAAQ,GACRC,MAEAD,EAAQD,EAAQ,GAChBE,MAuCkCqB,MAAO,CAAEC,OAAQ,QACzCb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAkBc,MAAM,cAG5Bf,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,MAAM,UACbT,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACED,MAAM,YACNJ,QA5DE,WACdrB,EAAQL,KAAKC,MAAsB,IAAhBD,KAAKE,YA4DZyB,MAAO,CAAEC,OAAQ,QAEjBb,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,QAGJD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,MAAM,QACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QA/DX,WACXrB,EAAQD,EAAQ,GAChBE,KA6DqCqB,MAAO,CAAEC,OAAQ,QAC1Cb,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAqBc,MAAM,iBAMrCf,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,MAAM,mBACbT,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEP,MAAO,CAAEQ,WAAY,WACrBT,QApDM,WACZ,IAAIU,EAAO,yCAAAC,OAA4C5C,GACvD6C,OAAOC,KAAKH,IAmDNf,UAAU,OAEVN,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CACEW,MAAO,CAAEc,OAAQ,OAAQC,MAAO,QAChCZ,MAAM,cAIZf,EAAAC,EAAAC,cAAA,aCpGN0B,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAAYC,SAASC,eAAe","file":"static/js/main.7bb45f54.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport FormatQuoteIcon from \"@material-ui/icons/FormatQuote\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst Counter = () => {\r\n  const [qtext, setqtext] = useState();\r\n  const [qauthor, setqauthor] = useState();\r\n  const [count, setCoun] = useState(Math.floor(Math.random() * 1000));\r\n\r\n  const randGen = () => {\r\n    setCoun(Math.floor(Math.random() * 1000));\r\n  };\r\n\r\n  const Incr = () => {\r\n    setCoun(count + 1);\r\n    show();\r\n  };\r\n  const Dcr = () => {\r\n    if (count <= 0) {\r\n      setCoun(0);\r\n      show();\r\n    } else {\r\n      setCoun(count - 1);\r\n      show();\r\n    }\r\n  };\r\n\r\n  const show = () => {\r\n    axios.get(`https://type.fit/api/quotes`).then((res) => {\r\n      setqtext(res.data[count].text);\r\n\r\n      setqauthor(res.data[count].author);\r\n    });\r\n  };\r\n  const tweet = () => {\r\n    let twtpost = `https://twitter.com/intent/tweet?text=${qtext}`;\r\n    window.open(twtpost);\r\n  };\r\n\r\n  useEffect(() => {\r\n    show();\r\n  }, [count]);\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <Paper elevation={3} className=\"img-fluid\">\r\n          <h5>\r\n            <span>\r\n              <FormatQuoteIcon />\r\n            </span>\r\n            {qtext}\r\n            <span>\r\n              <FormatQuoteIcon />\r\n            </span>\r\n          </h5>\r\n\r\n          <p>-{qauthor}</p>\r\n\r\n          <div className=\"bottombtn\">\r\n            <hr />\r\n            <Tooltip title=\"Back\">\r\n              <IconButton onClick={Dcr} style={{ margin: \"5px\" }}>\r\n                <ArrowBackIosIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Random\">\r\n              <Fab\r\n                color=\"secondary\"\r\n                onClick={randGen}\r\n                style={{ margin: \"5px\" }}\r\n              >\r\n                <ReplayIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Next\">\r\n              <IconButton onClick={Incr} style={{ margin: \"5px\" }}>\r\n                <ArrowForwardIosIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </Paper>\r\n      </center>\r\n      <Tooltip title=\"Tweet the Quote\">\r\n        <Button\r\n          style={{ background: \"#e3f2fd\" }}\r\n          onClick={tweet}\r\n          className=\"twt\"\r\n        >\r\n          <TwitterIcon\r\n            style={{ height: \"35px\", width: \"35px\" }}\r\n            color=\"primary\"\r\n          />\r\n        </Button>\r\n      </Tooltip>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\nexport default Counter;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Quotes from \"./Quotes\";\n\nReactDOM.render(<Quotes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}